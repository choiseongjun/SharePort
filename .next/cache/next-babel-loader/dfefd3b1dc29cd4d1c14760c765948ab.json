{"ast":null,"code":"import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from '../reducers/post';\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS } from '../reducers/post';\n/*\r\n  @Date 2019-08-02\r\n  @author 최성준\r\n  @brief 포트폴리오쉐어? 리듀서\r\n*/\n\nfunction addPostAPI() {}\n\nfunction* addPost() {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {}\n\nfunction* addComment(action) {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:\\Users\\ucssystem\\git\\studyMate\\src\\main\\resources\\static\\refer-client\\sagas\\post.js"],"names":["all","fork","takeLatest","put","delay","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","addPostAPI","addPost","type","e","error","watchAddPost","addCommentAPI","addComment","action","data","postId","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,QAAqE,kBAArE;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,mBAAnD,QAA8E,kBAA9E;AACA;;;;;;AAKA,SAASC,UAAT,GAAsB,CAErB;;AAED,UAAUC,OAAV,GAAoB;AAClB,MAAI;AACF,UAAMR,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEN;AADE,KAAD,CAAT;AAGD,GALD,CAKE,OAAOO,CAAP,EAAU;AACV,UAAMX,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAER,gBADE;AAERU,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUE,YAAV,GAAyB;AACvB,QAAMd,UAAU,CAACI,gBAAD,EAAmBM,OAAnB,CAAhB;AACD;;AAED,SAASK,aAAT,GAAyB,CAExB;;AAED,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMf,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEH,mBADE;AAERU,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEF,MAAM,CAACC,IAAP,CAAYC;AADhB;AAFE,KAAD,CAAT;AAMD,GARD,CAQE,OAAOP,CAAP,EAAU;AACV,UAAMX,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEL,mBADE;AAERO,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUQ,eAAV,GAA4B;AAC1B,QAAMpB,UAAU,CAACO,mBAAD,EAAsBS,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUK,QAAV,GAAqB;AAClC,QAAMvB,GAAG,CAAC,CACRC,IAAI,CAACe,YAAD,CADI,EAERf,IAAI,CAACqB,eAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\r\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from '../reducers/post';\r\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS } from '../reducers/post';\r\n/*\r\n  @Date 2019-08-02\r\n  @author 최성준\r\n  @brief 포트폴리오쉐어? 리듀서\r\n*/\r\nfunction addPostAPI() {\r\n\r\n}\r\n\r\nfunction* addPost() {\r\n  try {\r\n    yield delay(2000);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction addCommentAPI() {\r\n\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    yield delay(2000);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: {\r\n        postId: action.data.postId,\r\n      },\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchAddComment),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}