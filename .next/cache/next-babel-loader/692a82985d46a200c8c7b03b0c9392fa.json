{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ucssystem\\\\git\\\\studyMate\\\\src\\\\main\\\\resources\\\\static\\\\refer-client\\\\components\\\\SharePort\\\\SharePortForm.js\";\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../../reducers/post';\n\nconst SharePortForm = () => {\n  const dispatch = useDispatch();\n  const [text, setText] = useState('');\n  const {\n    isAddingPost,\n    postAdded\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    setText('');\n  }, [postAdded === true]);\n  const onSubmitForm = useCallback(e => {\n    e.preventDefault();\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        text\n      }\n    });\n  }, []);\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  return React.createElement(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uD3EC\\uD2B8\\uD3F4\\uB9AC\\uC624 \\uC791\\uC131\\uD558\\uC138\\uC694~\",\n    value: text,\n    onChange: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), React.createElement(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    loading: isAddingPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"\\uC791\\uC131\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n};\n\nexport default SharePortForm;","map":{"version":3,"sources":["C:\\Users\\ucssystem\\git\\studyMate\\src\\main\\resources\\static\\refer-client\\components\\SharePort\\SharePortForm.js"],"names":["React","useCallback","useState","useEffect","Form","Input","Button","useSelector","useDispatch","ADD_POST_REQUEST","SharePortForm","dispatch","text","setText","isAddingPost","postAdded","state","post","onSubmitForm","e","preventDefault","type","data","onChangeText","target","value","margin","float"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,gBAAR,QAA+B,qBAA/B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAGY,IAAAA,YAAH;AAAiBC,IAAAA;AAAjB,MAA+BR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAhD;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAFQ,EAEN,CAACE,SAAS,KAAK,IAAf,CAFM,CAAT;AAIA,QAAMG,YAAY,GAAGjB,WAAW,CAAEkB,CAAD,IAAO;AACtCA,IAAAA,CAAC,CAACC,cAAF;AACCT,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAEZ,gBADC;AAEPa,MAAAA,IAAI,EAAE;AACJV,QAAAA;AADI;AAFC,KAAD,CAAR;AAMF,GAR+B,EAQ7B,EAR6B,CAAhC;AAUA,QAAMW,YAAY,GAAGtB,WAAW,CAAEkB,CAAD,IAAO;AACtCN,IAAAA,OAAO,CAACM,CAAC,CAACK,MAAF,CAASC,KAAV,CAAP;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAb;AAAwC,IAAA,OAAO,EAAC,qBAAhD;AAAsE,IAAA,QAAQ,EAAER,YAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,SAAS,EAAE,GAA3B;AAAgC,IAAA,WAAW,EAAC,gEAA5C;AAA2D,IAAA,KAAK,EAAEN,IAAlE;AAAwE,IAAA,QAAQ,EAAEW,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,MAA3B;AAA4B,IAAA,MAAM,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAE;AAAT,KAA9B;AAAkD,IAAA,QAAQ,EAAC,QAA3D;AAAoE,IAAA,OAAO,EAAEb,YAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CAFF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAaD,CApCD;;AAsCA,eAAeJ,aAAf","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {ADD_POST_REQUEST} from '../../reducers/post'\r\n\r\nconst SharePortForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [text, setText] = useState('');\r\n  const {  isAddingPost, postAdded } = useSelector(state => state.post);\r\n\r\n  useEffect(() => {\r\n    setText('');\r\n  }, [postAdded === true]);\r\n\r\n  const onSubmitForm = useCallback((e) => {\r\n    e.preventDefault();\r\n     dispatch({\r\n       type: ADD_POST_REQUEST,\r\n       data: {\r\n         text,\r\n       },\r\n     });\r\n  }, []);\r\n\r\n  const onChangeText = useCallback((e) => {\r\n    setText(e.target.value);\r\n  }, []);\r\n\r\n  return (\r\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onSubmit={onSubmitForm}>\r\n      <Input.TextArea maxLength={140} placeholder=\"포트폴리오 작성하세요~\" value={text} onChange={onChangeText} />\r\n      <div>\r\n        <input type=\"file\" multiple hidden />\r\n        <Button>이미지 업로드</Button>\r\n        <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\" loading={isAddingPost}>작성</Button>\r\n      </div>\r\n      <div>\r\n        \r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SharePortForm;\r\n"]},"metadata":{},"sourceType":"module"}